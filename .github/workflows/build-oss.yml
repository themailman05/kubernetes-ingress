name: Build OSS

on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string
      image:
        required: true
        type: string
      tag:
        required: false
        type: string
      sha_long:
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.meta.outputs.version }}
      image_digest: ${{ steps.build-push.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: ${{ inputs.tag != '' && format('refs/tags/v{0}', inputs.tag) || github.ref }}
          fetch-depth: 0

      - name: Fetch Cached Artifacts
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: ${{ github.workspace }}/dist
          key: nginx-ingress-${{ github.run_id }}-${{ github.run_number }}-multi

      - name: Setup QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0
        with:
          platforms: arm,arm64,ppc64le,s390x
        if: github.event_name != 'pull_request'

      - name: Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1
      - name: DockerHub Login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name != 'pull_request'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Login to Public ECR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: github.event_name != 'pull_request'

      - name: Login to Quay.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Get short tag
        id: tag
        run: |
          version="${{ inputs.tag }}"
          short="${version%.*}"
          echo "short=$short" >> $GITHUB_OUTPUT
        if: ${{ inputs.tag != '' }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # v4.1.1
        with:
          images: |
            name=nginx/nginx-ingress
            name=ghcr.io/nginxinc/kubernetes-ingress
            name=public.ecr.aws/nginx/nginx-ingress
            name=quay.io/nginx/nginx-ingress
          flavor: |
            latest=${{ (inputs.tag != '' && 'true') || 'auto' }}
            suffix=${{ contains(inputs.image, 'ubi') && '-ubi' || '' }}${{ contains(inputs.image, 'alpine') && '-alpine' || '' }},onlatest=true
          tags: |
            type=edge
            type=ref,event=pr
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ inputs.tag }},enable=${{ inputs.tag != '' }}
            type=raw,value=${{ steps.tag.outputs.short }},enable=${{ inputs.tag != '' }}
          labels: |
            org.opencontainers.image.description=NGINX Ingress Controller for Kubernetes
            org.opencontainers.image.documentation=https://docs.nginx.com/nginx-ingress-controller
            org.opencontainers.image.vendor=NGINX Inc <kubernetes@nginx.com>
            org.opencontainers.image.revision=${{ inputs.sha_long != '' && inputs.sha_long || github.sha }}
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/nginxinc/kubernetes-ingress/main/README.md
            io.artifacthub.package.logo-url=https://docs.nginx.com/nginx-ingress-controller/images/icons/NGINX-Ingress-Controller-product-icon.svg
            io.artifacthub.package.maintainers=[{"name":"NGINX Inc","email":"kubernetes@nginx.com"}]
            io.artifacthub.package.license=Apache-2.0
            io.artifacthub.package.keywords=kubernetes,ingress,nginx,controller

      - name: Build Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # v3.2.0
        id: build-push
        with:
          file: build/Dockerfile
          context: '.'
          cache-from: type=gha,scope=${{ inputs.image }}
          cache-to: type=gha,scope=${{ inputs.image }},mode=max
          target: goreleaser
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ github.event_name != 'pull_request' && inputs.platforms || '' }}
          load: ${{ github.event_name == 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          no-cache: ${{ github.event_name != 'pull_request' }}
          build-args: |
            BUILD_OS=${{ inputs.image }}
            IC_VERSION=${{ github.event_name == 'pull_request' && 'CI' || steps.meta.outputs.version }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5 # 0.8.0
        continue-on-error: true
        with:
          image-ref: nginx/nginx-ingress:${{ steps.meta.outputs.version }}
          format: 'sarif'
          output: 'trivy-results-${{ inputs.image }}.sarif'
          ignore-unfixed: 'true'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@959cbb7472c4d4ad70cdfe6f4976053fe48ab394 # v2.1.37
        continue-on-error: true
        with:
          sarif_file: 'trivy-results-${{ inputs.image }}.sarif'

      - name: Upload Scan Results
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        continue-on-error: true
        with:
          name: 'trivy-results-${{ inputs.image }}.sarif'
          path: 'trivy-results-${{ inputs.image }}.sarif'
        if: always()

  send-notification:
        name: Send Notification
        needs: build
        uses: ./.github/workflows/updates-notification.yml
        with:
          sha_long: ${{ inputs.sha_long }}
          tag: ${{ inputs.tag }}
          version: ${{ needs.build.outputs.version }}
          image_digest: ${{ needs.build.outputs.image_digest }}
        secrets: inherit
        if: ${{ inputs.tag != '' }}
