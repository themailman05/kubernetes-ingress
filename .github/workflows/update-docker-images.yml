name: Update Docker Images

on:
  schedule:
    - cron:  '0 1 * * *'
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.ref_name }}-update
  cancel-in-progress: true

jobs:

  variables:
    name: Get versions of base images
    runs-on: ubuntu-22.04
    outputs:
      kic-tag: ${{ steps.kic.outputs.tag }}
      versions: ${{ steps.versions.outputs.matrix }}
      sha_short: ${{ steps.vars.outputs.sha_short }}
      sha_long: ${{ steps.vars.outputs.sha_long }}
      k8s_version: ${{ steps.vars.outputs.k8s_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0
      - name: Set KIC version
        id: kic
        run: |
          tag="$(git tag --sort=-version:refname | head -n1)"
          echo "tag=${tag//v}" >> $GITHUB_OUTPUT
      - name: Checkout Repository at ${{ steps.kic.outputs.tag }}
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: refs/tags/v${{ steps.kic.outputs.tag }}
      - name: Set NGINX versions
        id: versions
        run: |
          nginx=library/$(grep -m1 "FROM nginx:" < build/Dockerfile | awk -F" " '{print $2}')
          nginx_alpine=library/nginx:$(grep -m1 "FROM.*nginx:.*alpine" < build/Dockerfile | awk -F"[ :]" '{print $3}')
          nginx_ubi=$(grep "FROM redhat" < build/Dockerfile | awk -F" " '{print $2}')
          echo "matrix=[{\"version\": \"${nginx}\", \"distro\": \"debian\"}, {\"version\": \"${nginx_alpine}\", \"distro\": \"alpine\"}, {\"version\": \"${nginx_ubi}\", \"distro\": \"ubi\"}]" >> $GITHUB_OUTPUT
      - name: Set other variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "sha_long=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "k8s_version=$(grep -m1 'FROM kindest/node' <tests/docker/Dockerfile | awk -F'[:v]' '{print $3}')" >> $GITHUB_OUTPUT

  check:
    name: Check if updates are needed
    runs-on: ubuntu-22.04
    needs: variables
    outputs:
      needs-updating-debian: ${{ steps.needs.outputs.debian }}
      needs-updating-alpine: ${{ steps.needs.outputs.alpine }}
      needs-updating-ubi: ${{ steps.needs.outputs.ubi }}
    strategy:
      matrix:
        base_image: ${{ fromJson(needs.variables.outputs.versions) }}
    steps:
      - name: Build KIC tag
        id: dist
        run: |
          if [ ${{ matrix.base_image.distro }} == "debian" ]; then dist=""; else dist="-${{ matrix.base_image.distro }}"; fi
          echo "tag=${{ needs.variables.outputs.kic-tag }}${dist}" >> $GITHUB_OUTPUT
      - name: Check if update available for ${{ matrix.base_image.version }}
        id: update
        uses: lucacome/docker-image-update-checker@93aeebde51b01e63284197bae89f9a1d6dd1921f # v1.1.1
        with:
          base-image: ${{ matrix.base_image.version}}
          image: nginx/nginx-ingress:${{ steps.dist.outputs.tag }}
      - id: needs
        run: echo "${{ matrix.base_image.distro }}=${{ steps.update.outputs.needs-updating }}" >> $GITHUB_OUTPUT

  binary:
    if: ${{ needs.check.outputs.needs-updating-debian == 'true' || needs.check.outputs.needs-updating-alpine == 'true' || needs.check.outputs.needs-updating-ubi == 'true' }}
    name: Build binaries
    runs-on: ubuntu-22.04
    needs: [check, variables]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0
          ref: refs/tags/v${{ needs.variables.outputs.kic-tag }}
      - name: Setup Golang Environment
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Determine GOPATH
        id: go
        run: echo "go_path=$(go env GOPATH)" >> $GITHUB_OUTPUT
      - name: Build binaries
        uses: goreleaser/goreleaser-action@8f67e590f2d095516493f017008adc464e63adb1 # v4.1.0
        with:
          version: latest
          args: build --rm-dist --id kubernetes-ingress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: ${{ steps.go.outputs.go_path }}
      - name: Store Artifacts in Cache
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: ${{ github.workspace }}/dist
          key: nginx-ingress-${{ github.run_id }}-${{ github.run_number }}-multi

  test:
    name: Run tests
    runs-on: ubuntu-22.04
    needs: [check, variables, binary]
    strategy:
      matrix:
        include:
          - image: debian
            marker: ingresses
            needs-updating: ${{ needs.check.outputs.needs-updating-debian }}
          - image: alpine
            marker: "vs vsr"
            needs-updating: ${{ needs.check.outputs.needs-updating-alpine }}
          - image: ubi
            marker: "policies ts"
            needs-updating: ${{ needs.check.outputs.needs-updating-ubi }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: refs/tags/v${{ needs.variables.outputs.kic-tag }}
        if: ${{ matrix.needs-updating == 'true' }}
      - name: Fetch Cached Artifacts
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: ${{ github.workspace }}/dist
          key: nginx-ingress-${{ github.run_id }}-${{ github.run_number }}-multi
        if: ${{ matrix.needs-updating == 'true' }}
      - name: Run Smoke Tests
        id: smoke-tests
        uses: ./.github/actions/smoke-tests
        with:
          image: ${{ matrix.image }}
          marker: ${{ matrix.marker }}
          k8s-version: ${{ needs.variables.outputs.k8s_version }}
        if: ${{ matrix.needs-updating == 'true' }}
      - name: Upload Test Results
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: ${{ steps.smoke-tests.outputs.test-results-name }}
          path: ${{ github.workspace }}/tests/${{ steps.smoke-tests.outputs.test-results-name }}.html
        if: always()

  release-docker-debian:
    name: Release Debian Image
    needs: [binary, check, variables]
    uses: ./.github/workflows/build-oss.yml
    with:
      platforms: linux/arm,linux/arm64,linux/amd64,linux/ppc64le,linux/s390x
      image: debian
      tag: ${{ needs.variables.outputs.kic-tag }}
      sha_long: ${{ needs.variables.outputs.sha_long }}
    secrets: inherit
    if: ${{ needs.check.outputs.needs-updating-debian == 'true' }}

  release-docker-alpine:
    name: Release Alpine Image
    needs: [binary, check, variables]
    uses: ./.github/workflows/build-oss.yml
    with:
      platforms: linux/arm,linux/arm64,linux/amd64,linux/ppc64le,linux/s390x
      image: alpine
      tag: ${{ needs.variables.outputs.kic-tag }}
      sha_long: ${{ needs.variables.outputs.sha_long }}
    secrets: inherit
    if: ${{ needs.check.outputs.needs-updating-alpine == 'true' }}

  release-docker-ubi:
    name: Release UBI Image
    needs: [binary, check, variables]
    uses: ./.github/workflows/build-oss.yml
    with:
      platforms: linux/arm64,linux/amd64,linux/s390x
      image: ubi
      tag: ${{ needs.variables.outputs.kic-tag }}
      sha_long: ${{ needs.variables.outputs.sha_long }}
    secrets: inherit
    if: ${{ needs.check.outputs.needs-updating-ubi == 'true' }}
